for i in {1..5}
do
    echo -e '#!/bin/bash\nstart=`date +%s`\n#!/bin/bash\nBASEDIR=/workdir/hz269/DelBay_test/\nSAMPLELIST=$BASEDIR/sample_lists/fastq_list_1.txt\nSAMPLETABLE=$BASEDIR/sample_lists/fastq_table.txt\nREFNAME=CV30_masked\nSAMTOOLS=/programs/samtools-1.11/bin/samtools\nMINQ=20 # Minimum mapping quality filter used in the sorting step. When left undefined, the sorted bam file will not be counted (e.g. when reads are not filtered in the sorting step).\n\nif [ -z "$MINQ" ]; then\n\tprintf '\''sample_id\\tmapped_bases\\n'\''\nelse\n\tprintf '\''sample_id\\tmapped_bases\\tqual_filtered_mapped_bases\\n'\''\nfi\n\nfor SAMPLEFILE in `cat $SAMPLELIST`; do\n\n\t# Extract relevant values from a table of sample, sequencing, and lane ID (here in columns 4, 3, 2, respectively) for each sequenced library\n\tPOP_ID=`grep -P "${SAMPLEFILE}\\t" $SAMPLETABLE | cut -f 5`\n\tSAMPLE_ID=`grep -P "${SAMPLEFILE}\\t" $SAMPLETABLE | cut -f 4`\n\tSEQ_ID=`grep -P "${SAMPLEFILE}\\t" $SAMPLETABLE | cut -f 3`\n\tLANE_ID=`grep -P "${SAMPLEFILE}\\t" $SAMPLETABLE | cut -f 2`\n\tSAMPLE_SEQ_ID=$SAMPLE_ID'\''_'\''$POP_ID'\''_'\''$SEQ_ID'\''_'\''$LANE_ID\n\n\t## Extract data type from the sample table\n\tDATATYPE=`grep -P "${SAMPLEFILE}\\t" $SAMPLETABLE | cut -f 6`\n\n\t## Count raw mapped bases\n\tRAWBAMFILE=$BASEDIR'\''bam/'\''$SAMPLE_SEQ_ID'\''_'\''$DATATYPE'\''_bt2_'\''$REFNAME'\''.bam'\''\n\tMAPPEDBASES=`$SAMTOOLS stats $RAWBAMFILE | grep ^SN | cut -f 2- | grep "^bases mapped (cigar)" | cut -f 2`\n\n\tif [ -z "$MINQ" ]; then\n\t\tprintf "%s\\t%s\\n" $SAMPLE_SEQ_ID $MAPPEDBASES\n\telse\n\t\t## Count quality filtered mapped bases\n\t\tQUALFILTBAMFILE=$BASEDIR'\''bam/'\''$SAMPLE_SEQ_ID'\''_'\''$DATATYPE'\''_bt2_'\''$REFNAME'\''_minq'\''$MINQ'\''_sorted.bam'\''\n\t\tQUAFILTBASES=`$SAMTOOLS stats $QUALFILTBAMFILE | grep ^SN | cut -f 2- | grep "^bases mapped (cigar)" | cut -f 2`\n\t\tprintf "%s\\t%s\\t%s\\n" $SAMPLE_SEQ_ID $MAPPEDBASES $QUAFILTBASES\n\tfi\ndone\n\nend=`date +%s` ## date at end\nruntime=$((end-start))\nhours=$((runtime / 3600))\nminutes=$(( (runtime % 3600) / 60 ))\nseconds=$(( (runtime % 3600) % 60 ))\necho "Runtime: $hours:$minutes:$seconds (hh:mm:ss)"' >> formal/'count_bam_unmerged_'$i'.sh'
done
